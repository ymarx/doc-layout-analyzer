version: '3.8'

services:
  # CPU 전용 서비스
  doc-analyzer-cpu:
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    container_name: doc-analyzer-cpu
    volumes:
      - ./data/input:/app/data/input
      - ./data/output:/app/data/output
      - ./logs:/app/logs
      - ./config:/app/config
    environment:
      - PROCESSING_MODE=cpu
      - LOG_LEVEL=INFO
    ports:
      - "8000:8000"
    restart: unless-stopped
    command: python main.py --cpu-only

  # GPU 지원 서비스 (NVIDIA GPU 필요)
  doc-analyzer-gpu:
    build:
      context: .
      dockerfile: Dockerfile
      target: gpu-base
    container_name: doc-analyzer-gpu
    volumes:
      - ./data/input:/app/data/input
      - ./data/output:/app/data/output
      - ./logs:/app/logs
      - ./config:/app/config
    environment:
      - PROCESSING_MODE=gpu
      - CUDA_VISIBLE_DEVICES=0
      - LOG_LEVEL=INFO
    ports:
      - "8001:8000"
    restart: unless-stopped
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    command: python main.py --gpu

  # Qdrant 벡터 데이터베이스 (선택사항)
  qdrant:
    image: qdrant/qdrant:v1.7.0
    container_name: qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_storage:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    restart: unless-stopped

  # 개발 환경용 서비스
  doc-analyzer-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    container_name: doc-analyzer-dev
    volumes:
      - .:/app
      - /app/venv  # 가상환경 제외
    environment:
      - PROCESSING_MODE=auto
      - LOG_LEVEL=DEBUG
    ports:
      - "8002:8000"
    stdin_open: true
    tty: true
    command: bash

volumes:
  qdrant_storage:

networks:
  default:
    name: doc-analyzer-network